---
import { Image } from 'astro:assets';
import '../styles/global.css';
import profilePicture from '../assets/ProfilePicture.png';
import keytodream from '../assets/keytodream.png';
import Starfield from "../components/Starfield.jsx";

const stack = [
	{name:'React', img:'react.svg'},
	{name:'Astro', img:'astro.svg'},
	{name:'TypeScript', img:'typescript.svg'},
	{name:'Python', img:'python.svg'},
	{name:'Tailwind', img:'tailwind.svg'},
	{name:'Motion', img:'motion.avif'},
	{name:'Threejs', img:'threejs.ico'},
	{name:'Nodejs', img:'nodejs.svg'},
	{name:'Expressjs', img:'express.svg'},
	{name:'MySQL', img:'mysql.svg'},
	{name:'Supabase', img:'supabase.png'},
	{name:'Git', img:'git.svg'},
	{name:'Miro', img:'miro.svg'}, 
	{name:'English', img:'english.svg'},
	{name:'Spanish', img:'spanish.svg'}
]

---

<html lang="en" class="bg-black">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="favicon.png"/>
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Alexandro Lucero</title>
	</head>

	<body class="text-text font-poppins flex flex-col overflow-x-hidden relative
	               lg:flex-row lg:gap-20 lg:scroll-mt-10" id="stack">
		<Starfield client:load/>
		<div class="hidden lg:block lg:w-2/5"/>

		<!-- principal -->
		<div class="flex flex-col gap-5 p-5 my-5 sm:px-[10vw] md:px-[20vw] lg:my-10 lg:px-[10vw] lg:fixed lg:w-[50vw] xl:pl-[20vw]">
		  <div class="flex gap-2 items-center lg:col-start-1">
		  	<h1 class="text-5xl text-title">Alexandro Lucero</h1>
		  	<Image src={profilePicture} class="h-20 w-20 z-10 rounded-full border shadow-md bg-black shadow-black border-border/50" alt="profile-picture">
		  </div>
		  <h2 class="text-xl text-yellow-neon lg:col-start-1 italic">FullStack Developer</h2>
		  <h3 class="text-lg break-keep lg:col-start-1">Versatile in building dynamic, high performance web apps with fullstack capability.</h3>
  
		  <!-- web-socials -->
		  <div class="flex gap-5 lg:col-start-1 z-10 text-title">
		  	<a href="https://github.com/Alexrulu" target="_blank" 
				  class="bg-black p-2 rounded-full shadow-md shadow-black border border-border/30 hover:bg-surface hover:scale-110 duration-200">
		  		<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-github-icon lucide-github"><path d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"/><path d="M9 18c-4.51 2-5-2-7-2"/></svg>
				</a>
		  	<a href="https://www.linkedin.com/in/alexandrolucero/" target="_blank" 
				  class="bg-black p-2 rounded-full shadow-md shadow-black border border-border/30 hover:bg-surface hover:scale-110 duration-200">
		  		<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-linkedin-icon lucide-linkedin"><path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"/><rect width="4" height="12" x="2" y="9"/><circle cx="4" cy="4" r="2"/></svg>
				</a>
		  	<a href="https://www.instagram.com/alexrulu/" target="_blank" 
				  class="bg-black p-2 rounded-full shadow-md shadow-black border border-border/30 hover:bg-surface hover:scale-110 duration-200">
		  		<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-instagram-icon lucide-instagram"><rect width="20" height="20" x="2" y="2" rx="5" ry="5"/><path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"/><line x1="17.5" x2="17.51" y1="6.5" y2="6.5"/></svg>
				</a>
		  </div>
		  <div class="flex gap-2 cursor-pointer relative lg:col-start-1 group duration-200 mr-auto" id="copy-email">
		  	<p class="text-title group-hover:text-yellow-neon duration-200" id="email-text">alexandro71000@gmail.com</p>
		  	<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-copy-icon lucide-copy group-hover:text-yellow-neon duration-200"><rect width="14" height="14" x="8" y="8" rx="2" ry="2"/><path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"/></svg>
		    <p class="absolute -bottom-1 -right-25 opacity-0 duration-300 bg-surface rounded-xl px-2 py-0.5 pointer-events-none" id="copy-message">Copied!</p>
		  </div>
			<div class="flex flex-col gap-5 text-center text-title w-[260px]">
				<a class="py-1.5 px-2 bg-black rounded-xl relative border border-border/30 shadow-md shadow-black 
				        hover:bg-surface hover:scale-110 duration-200"
						href="AlexandroLuceroCV-English.pdf" download >Download English CV</a>
				<a class="py-1.5 px-2 bg-black rounded-xl relative border border-border/30 shadow-md shadow-black 
				        hover:bg-surface hover:scale-110 duration-200"
						href="AlexandroLuceroCV-Spanish.pdf" download >Download Spanish CV</a>
			</div>
			<div class="hidden lg:flex flex-col gap-3 text-xl mt-5 mr-auto">
				<a class="text-left text-title cursor-pointer hover:text-yellow-neon duration-200" href="#stack">-- Stack</a>
				<a class="text-left text-title cursor-pointer hover:text-yellow-neon duration-200" href="#projects">-- Projects</a>
				<a class="text-left text-title cursor-pointer hover:text-yellow-neon duration-200" href="#contact-form">-- Contact</a>
			</div>
		</div>

		<!-- stack -->
		 <div class="flex flex-col gap-4 p-5 my-5 sm:px-[10vw] md:px-[20vw] lg:pt-10 lg:pb-10 lg:w-3/5 lg:px-[10vw] xl:pr-[20vw]">
		  <p class="text-yellow-neon mt-20 text-xl lg:col-start-2 lg:row-start-1 lg:mt-0 italic">Stack</p>
		  <div class="grid grid-cols-[1fr_1fr_1fr_1fr] gap-3 text-xs lg:col-start-2 lg:row-start-2 xl:grid-cols-[1fr_1fr_1fr_1fr_1fr]">
		  	{stack.map((item) => (
		  		<article class="w-full text-title flex flex-col items-center gap-2 py-2 bg-black rounded-xl shadow-md shadow-black border border-border/30 group overflow-hidden relative">
		  			<img src={item.img} class="w-10 h-10 rounded lg:scale-130 lg:translate-y-3 group-hover:translate-y-0 group-hover:scale-100 duration-300" alt={item.name}/>
		  		  <span class="lg:opacity-0 group-hover:opacity-100 duration-200 cursor-default">{item.name}</span>
						<span class="absolute -translate-y-12 group-hover:translate-y-0 duration-300 h-30 bg-white/10 z-10 w-40 rotate-30 -top-20 -right-20"/>
		  		</article>
		  	))}
      </div>
  
		  <!-- my projects -->
		  <p class="text-yellow-neon mt-20 text-xl lg:scroll-mt-16 italic" id="projects">Projects</p>
		  <p class="text-title">KEY TO DREAM</p>
		  <div class="flex justify-between items-center">
		  	<p>May 2025 (8 month of work)</p>
		  	<a href="https://github.com/Alexrulu/keytodream2" target="_blank" 
				  class="bg-surface rounded-xl py-1 px-2 flex gap-1 text-title hover:text-yellow-neon duration-200 z-10">
		  		<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-github-icon lucide-github"><path d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"/><path d="M9 18c-4.51 2-5-2-7-2"/></svg>
		  		Repo
		  	</a>
		  </div>
			<a href="https://keytodream.vercel.app/" target="_blank" class="z-10">
		    <Image src={keytodream} class="w-full rounded-xl lg:brightness-50 hover:brightness-100 duration-300 cursor-pointer" alt="keytodream project">
			</a>
		  <div class="flex flex-wrap gap-2">
		  	{['React', 'Tailwind', 'Motion', 'Threejs', 'Expressjs', 'Nodejs', 'MySQL', 'Git'].map((item) => (
		  		<span class="bg-black px-2 rounded-xl border border-border/30 shadow-md shadow-black py-0.5 z-10 text-title cursor-default">{item}</span>
		  	))}
		  </div>
		  <p class="relative z-10 bg-black/90 p-3 rounded-xl mr-auto text-title/80 border-border/30 border shadow-md shadow-black">
		  	Key to Dream is a full-stack web application I developed for the final presentation of a one-year course. I completely rebuilt my own legacy version from scratch, using advanced tools like Tailwind, Framer Motion, and Three.js to enhance design and performance. The app features full CRUD functionality, showcasing both my core skills and initiative.
		  </p>
  
		  <!-- contact -->
		  <form class="bg-black/90 z-10 flex flex-col gap-3 border border-border/30 shadow-md shadow-black rounded-xl p-4 my-20 lg:scroll-mt-16 lg:gap-5"
		           id="contact-form"
           action="https://formspree.io/f/mqaqovyp"
           method="POST">
        <p class="text-yellow-neon text-xl italic">Contact</p>
        <div class="flex w-full gap-3 justify-between">
          <div class="w-1/2 flex flex-col gap-2">
            <p class="text-sm">First name *</p>
            <input class="bg-surface border border-border rounded-lg w-full py-1 px-2 outline-none" 
		  			 placeholder="First name" type="text" name="First name" required>
          </div>
          <div class="w-1/2 flex flex-col gap-2">
            <p class="text-sm">Last name</p>
            <input class="bg-surface border border-border rounded-lg w-full py-1 px-2 outline-none" 
		  			 placeholder="Last Name" type="text" name="Last name">
          </div>
        </div>
        <div class="flex flex-col gap-2">
          <p class="text-sm">Email *</p>
          <input class="bg-surface border border-border rounded-lg w-full py-1 px-2 outline-none" 
		  		 placeholder="Email" type="email" name="Email" required autocomplete="email">
        </div>
        <div class="flex flex-col gap-2">
          <p class="text-sm">How can I help you? *</p>
          <textarea class="bg-surface border border-border rounded-lg w-full py-1 px-2 outline-none" 
		  		    placeholder="Feel free to outline your ideas or needs..." maxlength="500" name="message" required></textarea>
        </div>
        <button type="submit" class="bg-white rounded-lg text-black py-2 cursor-pointer active:translate-y-2 duration-100">Submit</button>
      </form>
		</div>

		<!-- no redirect from formspree script -->
		 <script is:inline type="module">
      const form = document.getElementById('contact-form');
      const status = document.getElementById('form-status');
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(form);
        const action = form.action;
        try {
          const response = await fetch(action, {
            method: 'POST',
            body: formData,
            headers: {
              'Accept': 'application/json'
            }
          });
          if (response.ok) {
            status.textContent = "Message sent successfully! Thank you.";
            status.classList.remove('hidden');
            form.reset();
          } else {
            status.textContent = "Oops! There was a problem sending your message.";
            status.classList.remove('hidden');
          }
        } catch (error) {
          status.textContent = "Network error. Please try again later.";
          status.classList.remove('hidden');
        }
      });
    </script>

		<!-- copy email script -->
		<script is:inline type="module">
      document.addEventListener("DOMContentLoaded", () => {
        const copyContainer = document.getElementById("copy-email");
        const emailTextEl = document.getElementById("email-text");
        const copyMsg = document.getElementById("copy-message");
        if (!copyContainer || !emailTextEl) return;
        copyContainer.addEventListener("click", async () => {
          const email = emailTextEl.textContent;
          if (!email) return;
          try {
            await navigator.clipboard.writeText(email);
            if (copyMsg) {
              copyMsg.classList.remove("opacity-0");
              copyMsg.classList.add("opacity-100");
              setTimeout(() => {
                copyMsg.classList.remove("opacity-100");
                copyMsg.classList.add("opacity-0");
              }, 2000);
            }
          } catch (err) {
            console.error("Failed to copy email:", err);
          }
        });
      });
    </script>
	</body>
	
</html>
